To Build a RESTful Web Service

//Add Spring Boot Starter Web Dependency into the configuration file (pom.xml)

//HTTP request method is GET
@RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   			static {
      				Product honey = new Product();
      				honey.setId("1");
      				honey.setName("Honey");
      				productRepo.put(honey.getId(), honey);
   				}
   		@RequestMapping(value = "/products")
   		public ResponseEntity<Object> getProduct() {
      			return new ResponseEntity<>(productRepo.values(), HttpStatus.OK);
   		}
	}
  
  
  //HTTP request used to create resource POST
  @RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   
   		@RequestMapping(value = "/products", method = RequestMethod.POST)
   		public ResponseEntity<Object> createProduct(@RequestBody Product product) {
      			productRepo.put(product.getId(), product);
      			return new ResponseEntity<>("Product is created successfully", HttpStatus.CREATED);
   		}
	}
  
  
  //HTTP request to update existing resource PUT
  @RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   
   		@RequestMapping(value = "/products/{id}", method = RequestMethod.PUT)
   		public ResponseEntity<Object> updateProduct(@PathVariable("id") String id, @RequestBody Product product) { 
      			productRepo.remove(id);
      			product.setId(id);
      			productRepo.put(id, product);
      			return new ResponseEntity<>("Product is updated successsfully", HttpStatus.OK);
   		}   
	}
  
  //HTTP request to delete existing resource DELETE
  @RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   
  		@RequestMapping(value = "/products/{id}", method = RequestMethod.DELETE)
  		public ResponseEntity<Object> delete(@PathVariable("id") String id) { 
      			productRepo.remove(id);
      			return new ResponseEntity<>("Product is deleted successsfully", HttpStatus.OK);
  	 	}
	}


steps to create:
1)Create application manually or through spring initializer

2)Create a package in src\main\java\com.example.Name and call the package model. Enter you variables then have the get and set methods
  eg
      private int id;
      
      public void setId(int id){
        this.id = id;
      }
      public int getId(){
        return id;
      }
      
3)Create a package in src\main\java\com.example.Name and call the package controller. Add you endpoints
  eg
       public static Map<String, Customer> customerRepo = new HashMap<>();
        static {
          Customer kea = new Customer();
          kea.setId("1");
        }
        
        //get the values 
        @RequestMapping(value = "/customers")
        public ResponseEntity<Object> getCustomer(){
          return new ResponseEntity<>(customerRepo.values(), HttpStatus.OK);
        }
        
  4)Make sure you download Maven then set the path in envrionment variables then run in terminal
    eg
      mvn clean install
      
  5)Run the executable jar file you created then test in Postman
