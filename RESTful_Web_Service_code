To Build a RESTful Web Service

//Add Spring Boot Starter Web Dependency into the configuration file (pom.xml)

//HTTP request method is GET
@RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   			static {
      				Product honey = new Product();
      				honey.setId("1");
      				honey.setName("Honey");
      				productRepo.put(honey.getId(), honey);
   				}
   		@RequestMapping(value = "/products")
   		public ResponseEntity<Object> getProduct() {
      			return new ResponseEntity<>(productRepo.values(), HttpStatus.OK);
   		}
	}
  
  
  //HTTP request used to create resource POST
  @RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   
   		@RequestMapping(value = "/products", method = RequestMethod.POST)
   		public ResponseEntity<Object> createProduct(@RequestBody Product product) {
      			productRepo.put(product.getId(), product);
      			return new ResponseEntity<>("Product is created successfully", HttpStatus.CREATED);
   		}
	}
  
  
  //HTTP request to update existing resource PUT
  @RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   
   		@RequestMapping(value = "/products/{id}", method = RequestMethod.PUT)
   		public ResponseEntity<Object> updateProduct(@PathVariable("id") String id, @RequestBody Product product) { 
      			productRepo.remove(id);
      			product.setId(id);
      			productRepo.put(id, product);
      			return new ResponseEntity<>("Product is updated successsfully", HttpStatus.OK);
   		}   
	}
  
  //HTTP request to delete existing resource DELETE
  @RestController
		public class ProductServiceController {
   			private static Map<String, Product> productRepo = new HashMap<>();
   
  		@RequestMapping(value = "/products/{id}", method = RequestMethod.DELETE)
  		public ResponseEntity<Object> delete(@PathVariable("id") String id) { 
      			productRepo.remove(id);
      			return new ResponseEntity<>("Product is deleted successsfully", HttpStatus.OK);
  	 	}
	}
